@PACKAGE_INIT@

#-----------------------------------------------------------------------------
# Modules
#-----------------------------------------------------------------------------

# List of currently enabled bitpit modules
set(BITPIT_ENABLED_MODULE_LIST "@BITPIT_ENABLED_MODULE_LIST@")

# Check if requested modules are enabled
if(BITPIT_FIND_COMPONENTS)
    foreach(COMPONENT ${BITPIT_FIND_COMPONENTS})
        list(FIND BITPIT_ENABLED_MODULE_LIST ${COMPONENT} COMPONENT_INDEX)
        if(${COMPONENT_INDEX} LESS 0)
            set(BITPIT_${COMPONENT}_FOUND 0)

            set(COMPONENT_NOT_FOUND_MESSAGE "${COMPONENT} module is not enabled in current bitpit installation")
            if(BITPIT_FIND_REQUIRED_${COMPONENT})
               message(FATAL_ERROR "${COMPONENT_NOT_FOUND_MESSAGE}")
            elseif (NOT BITPIT_FIND_QUIETLY)
               message(STATUS "${COMPONENT_NOT_FOUND_MESSAGE}")
            endif ()
        else()
            set(BITPIT_${COMPONENT}_FOUND 1)
        endif()
    endforeach()
endif()

# Check if optional modules are enabled
if(BITPIT_FIND_OPTIONAL_COMPONENTS)
    foreach(COMPONENT ${BITPIT_FIND_OPTIONAL_COMPONENTS})
        list(FIND BITPIT_ENABLED_MODULE_LIST ${COMPONENT} COMPONENT_INDEX)
        if(${COMPONENT_INDEX} LESS 0)
            set(BITPIT_${COMPONENT}_FOUND 0)
            set(COMPONENT_NOT_FOUND_MESSAGE "${COMPONENT} optional module is not enabled in current bitpit installation")
            message(STATUS "${COMPONENT_NOT_FOUND_MESSAGE}")
        else()
            set(BITPIT_${COMPONENT}_FOUND 1)
        endif()
    endforeach()
endif()

#-----------------------------------------------------------------------------
# Location of UseBITPIT.cmake file.
#-----------------------------------------------------------------------------

SET(BITPIT_USE_FILE "@CMAKE_INSTALL_PREFIX@/@BITPIT_INSTALL_CMAKEDIR@/UseBITPIT.cmake")

#-----------------------------------------------------------------------------
# Programming languages
#-----------------------------------------------------------------------------

set(BITPIT_LANGUAGES "@BITPIT_LANGUAGES@")

#-----------------------------------------------------------------------------
# Find bitpit external dependencies
#-----------------------------------------------------------------------------

list(APPEND CMAKE_MODULE_PATH "@CMAKE_INSTALL_PREFIX@/@BITPIT_INSTALL_CMAKEDIR@")

# Set external dependencies information
set(_EXTERNAL_DEPENDENCIES "@BITPIT_EXTERNAL_DEPENDENCIES@")
set(_EXTERNAL_VARIABLES_LIBRARIES "@BITPIT_EXTERNAL_VARIABLES_LIBRARIES@")
set(_EXTERNAL_VARIABLES_INCLUDE_DIRS "@BITPIT_EXTERNAL_VARIABLES_INCLUDE_DIRS@")

# Setp up variables needed by external dependencies
list(FIND _EXTERNAL_DEPENDENCIES "PETSc" _PETSc_index)
if (${_PETSc_index} GREATER -1)
    if (NOT PETSC_DIR AND DEFINED ENV{PETSC_DIR})
        set(DEFAULT_PETSC_DIR "$ENV{PETSC_DIR}")
    else()
        set(DEFAULT_PETSC_DIR "")
    endif()
    set(PETSC_DIR "${DEFAULT_PETSC_DIR}" CACHE PATH "Installation directory of PETSC library")

    if (NOT PETSC_ARCH AND DEFINED ENV{PETSC_ARCH})
        set(DEFAULT_PETSC_ARCH "$ENV{PETSC_ARCH}")
    else()
        set(DEFAULT_PETSC_ARCH "")
    endif()
    set(PETSC_ARCH "${DEFAULT_PETSC_ARCH}" CACHE STRING "Build architecture")
endif()
unset(_PETSc_index)

# Find external packages
list(REVERSE _EXTERNAL_DEPENDENCIES)
foreach(_DEPENDENCY ${_EXTERNAL_DEPENDENCIES})
    find_package("${_DEPENDENCY}" REQUIRED)
endforeach()

# Add external libraries
foreach (VARIABLE_NAME IN LISTS _EXTERNAL_VARIABLES_LIBRARIES)
    set(LIBRARY_LIST "${${VARIABLE_NAME}}")
    foreach (LIBRARY IN LISTS LIBRARY_LIST)
        list (APPEND BITPIT_LIBRARIES "${LIBRARY}")
    endforeach ()
endforeach ()

# Add external inclued paths
foreach (VARIABLE_NAME IN LISTS _EXTERNAL_VARIABLES_INCLUDE_DIRS)
    list (APPEND BITPIT_INCLUDE_DIRS "${${VARIABLE_NAME}}")
endforeach ()

#-----------------------------------------------------------------------------
# Include targets
#-----------------------------------------------------------------------------
include ( "${CMAKE_CURRENT_LIST_DIR}/@BITPIT_CMAKE_TARGETS_FILE@" )

#-----------------------------------------------------------------------------
# Backwards compatibility
#-----------------------------------------------------------------------------

# Definitions
get_target_property(BITPIT_DEFINITIONS @BITPIT_LIBRARY@::@BITPIT_LIBRARY@ INTERFACE_COMPILE_DEFINITIONS)

# Include directories
get_target_property(BITPIT_INCLUDE_DIRS @BITPIT_LIBRARY@::@BITPIT_LIBRARY@ INTERFACE_INCLUDE_DIRECTORIES)

# Include libraries
get_target_property(BITPIT_LIBRARY @BITPIT_LIBRARY@::@BITPIT_LIBRARY@ LOCATION)
get_target_property(BITPIT_LINK_LIBRARIES @BITPIT_LIBRARY@::@BITPIT_LIBRARY@ INTERFACE_LINK_LIBRARIES)
set(BITPIT_LIBRARIES "${BITPIT_LINK_LIBRARIES};${BITPIT_LIBRARY}")
